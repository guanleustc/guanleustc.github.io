@article{mimosa-j,
 abstract = {Cryptography is essential for computer and network security. In practice, the cryptographic keys are loaded into the memory as plaintext during cryptographic computations. Therefore, the keys are subject to memory disclosure attacks that read unauthorized data from RAM. This paper presents Mimosa, protecting RSA private keys against both software-based and physical memory disclosure attacks. Mimosa uses hardware transactional memory (HTM) to ensure that (a) whenever a malicious process attempts to read the plaintext private key, the transaction aborts and all sensitive data are automatically cleared, due to the atomicity guarantee of HTM; and (b) all sensitive data appear as plaintext only within caches, and are never loaded to RAM chips. To the best of our knowledge, Mimosa is the first to use transactional memory to protect sensitive data against memory attacks. We implemented Mimosa with Intel TSX. However, the fragility of TSX transactions introduces extra cache-clogging denial-of-service (DoS) threats, and attackers could sharply degrade the performance. We further partition an RSA private-key computation into multiple transactional parts, while (sensitive) intermediate results are protected across transactional parts. Experiments show that Mimosa effectively protects cryptographic keys against memory disclosure attacks, and introduces a small overhead, even with concurrent cache-clogging workloads.},
 author = {Li, Congwu and Guan, Le and Lin, Jingqiang and Luo, Bo and Cai, Quanwei and Jing, Jiwu and Wang, Jing},
 doi = {10.1109/TDSC.2019.2897666},
 issn = {1545-5971},
 journal = {IEEE Transactions on Dependable and Secure Computing},
 keywords = {Random access memory;Cryptography;Registers;Kernel;Hardware;Cold-Boot Attack;CPU-Bound Encryption;DMA Attack;Memory Disclosure Attack;Transactional Memory},
 number = {},
 pages = {1-1},
 title = {Mimosa: Protecting Private Keys against Memory Disclosure Attacks using Hardware Transactional Memory},
 volume = {},
 year = {2019}
}

